// source: fonts_public.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.google.fonts.AxisProto', null, global);
goog.exportSymbol('proto.google.fonts.FamilyProto', null, global);
goog.exportSymbol('proto.google.fonts.FontProto', null, global);
goog.exportSymbol('proto.google.fonts.SourceProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fonts.FamilyProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fonts.FamilyProto.repeatedFields_, null);
};
goog.inherits(proto.google.fonts.FamilyProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fonts.FamilyProto.displayName = 'proto.google.fonts.FamilyProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fonts.FontProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.fonts.FontProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fonts.FontProto.displayName = 'proto.google.fonts.FontProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fonts.AxisProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.fonts.AxisProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fonts.AxisProto.displayName = 'proto.google.fonts.AxisProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fonts.SourceProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.fonts.SourceProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fonts.SourceProto.displayName = 'proto.google.fonts.SourceProto';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fonts.FamilyProto.repeatedFields_ = [6,7,8,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fonts.FamilyProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fonts.FamilyProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fonts.FamilyProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.FamilyProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    designer: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    license: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    category: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    dateAdded: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    fontsList: jspb.Message.toObjectList(msg.getFontsList(),
    proto.google.fonts.FontProto.toObject, includeInstance),
    aliasesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    subsetsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    ttfAutohintArgs: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    axesList: jspb.Message.toObjectList(msg.getAxesList(),
    proto.google.fonts.AxisProto.toObject, includeInstance),
    apiDefaultOverridesMap: (f = msg.getApiDefaultOverridesMap()) ? f.toObject(includeInstance, undefined) : [],
    source: (f = msg.getSource()) && proto.google.fonts.SourceProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fonts.FamilyProto}
 */
proto.google.fonts.FamilyProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fonts.FamilyProto;
  return proto.google.fonts.FamilyProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fonts.FamilyProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fonts.FamilyProto}
 */
proto.google.fonts.FamilyProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesigner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateAdded(value);
      break;
    case 6:
      var value = new proto.google.fonts.FontProto;
      reader.readMessage(value,proto.google.fonts.FontProto.deserializeBinaryFromReader);
      msg.addFonts(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addAliases(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubsets(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTtfAutohintArgs(value);
      break;
    case 10:
      var value = new proto.google.fonts.AxisProto;
      reader.readMessage(value,proto.google.fonts.AxisProto.deserializeBinaryFromReader);
      msg.addAxes(value);
      break;
    case 11:
      var value = msg.getApiDefaultOverridesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readFloat, null, "", 0.0);
         });
      break;
    case 12:
      var value = new proto.google.fonts.SourceProto;
      reader.readMessage(value,proto.google.fonts.SourceProto.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fonts.FamilyProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fonts.FamilyProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fonts.FamilyProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.FamilyProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFontsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.google.fonts.FontProto.serializeBinaryToWriter
    );
  }
  f = message.getAliasesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getSubsetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAxesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.google.fonts.AxisProto.serializeBinaryToWriter
    );
  }
  f = message.getApiDefaultOverridesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeFloat);
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.google.fonts.SourceProto.serializeBinaryToWriter
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string designer = 2;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getDesigner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setDesigner = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearDesigner = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasDesigner = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string license = 3;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setLicense = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearLicense = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasLicense = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string category = 4;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required string date_added = 5;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getDateAdded = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setDateAdded = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearDateAdded = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasDateAdded = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated FontProto fonts = 6;
 * @return {!Array<!proto.google.fonts.FontProto>}
 */
proto.google.fonts.FamilyProto.prototype.getFontsList = function() {
  return /** @type{!Array<!proto.google.fonts.FontProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fonts.FontProto, 6));
};


/**
 * @param {!Array<!proto.google.fonts.FontProto>} value
 * @return {!proto.google.fonts.FamilyProto} returns this
*/
proto.google.fonts.FamilyProto.prototype.setFontsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.fonts.FontProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fonts.FontProto}
 */
proto.google.fonts.FamilyProto.prototype.addFonts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.fonts.FontProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearFontsList = function() {
  return this.setFontsList([]);
};


/**
 * repeated string aliases = 7;
 * @return {!Array<string>}
 */
proto.google.fonts.FamilyProto.prototype.getAliasesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setAliasesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.addAliases = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearAliasesList = function() {
  return this.setAliasesList([]);
};


/**
 * repeated string subsets = 8;
 * @return {!Array<string>}
 */
proto.google.fonts.FamilyProto.prototype.getSubsetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setSubsetsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.addSubsets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearSubsetsList = function() {
  return this.setSubsetsList([]);
};


/**
 * optional string ttf_autohint_args = 9;
 * @return {string}
 */
proto.google.fonts.FamilyProto.prototype.getTtfAutohintArgs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.setTtfAutohintArgs = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearTtfAutohintArgs = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasTtfAutohintArgs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated AxisProto axes = 10;
 * @return {!Array<!proto.google.fonts.AxisProto>}
 */
proto.google.fonts.FamilyProto.prototype.getAxesList = function() {
  return /** @type{!Array<!proto.google.fonts.AxisProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fonts.AxisProto, 10));
};


/**
 * @param {!Array<!proto.google.fonts.AxisProto>} value
 * @return {!proto.google.fonts.FamilyProto} returns this
*/
proto.google.fonts.FamilyProto.prototype.setAxesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.fonts.AxisProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fonts.AxisProto}
 */
proto.google.fonts.FamilyProto.prototype.addAxes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.fonts.AxisProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearAxesList = function() {
  return this.setAxesList([]);
};


/**
 * map<string, float> api_default_overrides = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.google.fonts.FamilyProto.prototype.getApiDefaultOverridesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearApiDefaultOverridesMap = function() {
  this.getApiDefaultOverridesMap().clear();
  return this;};


/**
 * optional SourceProto source = 12;
 * @return {?proto.google.fonts.SourceProto}
 */
proto.google.fonts.FamilyProto.prototype.getSource = function() {
  return /** @type{?proto.google.fonts.SourceProto} */ (
    jspb.Message.getWrapperField(this, proto.google.fonts.SourceProto, 12));
};


/**
 * @param {?proto.google.fonts.SourceProto|undefined} value
 * @return {!proto.google.fonts.FamilyProto} returns this
*/
proto.google.fonts.FamilyProto.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fonts.FamilyProto} returns this
 */
proto.google.fonts.FamilyProto.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FamilyProto.prototype.hasSource = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fonts.FontProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fonts.FontProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fonts.FontProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.FontProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    style: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    weight: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    filename: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    postScriptName: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    fullName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    copyright: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fonts.FontProto}
 */
proto.google.fonts.FontProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fonts.FontProto;
  return proto.google.fonts.FontProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fonts.FontProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fonts.FontProto}
 */
proto.google.fonts.FontProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostScriptName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCopyright(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fonts.FontProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fonts.FontProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fonts.FontProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.FontProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string style = 2;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setStyle = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearStyle = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasStyle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 weight = 3;
 * @return {number}
 */
proto.google.fonts.FontProto.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setWeight = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearWeight = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string filename = 4;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setFilename = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearFilename = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required string post_script_name = 5;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getPostScriptName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setPostScriptName = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearPostScriptName = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasPostScriptName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required string full_name = 6;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setFullName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearFullName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasFullName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string copyright = 7;
 * @return {string}
 */
proto.google.fonts.FontProto.prototype.getCopyright = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.setCopyright = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.FontProto} returns this
 */
proto.google.fonts.FontProto.prototype.clearCopyright = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.FontProto.prototype.hasCopyright = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fonts.AxisProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fonts.AxisProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fonts.AxisProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.AxisProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    minValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    defaultValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    maxValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fonts.AxisProto}
 */
proto.google.fonts.AxisProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fonts.AxisProto;
  return proto.google.fonts.AxisProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fonts.AxisProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fonts.AxisProto}
 */
proto.google.fonts.AxisProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDefaultValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fonts.AxisProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fonts.AxisProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fonts.AxisProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.AxisProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.google.fonts.AxisProto.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.setTag = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.clearTag = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.AxisProto.prototype.hasTag = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float min_value = 2;
 * @return {number}
 */
proto.google.fonts.AxisProto.prototype.getMinValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.setMinValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.clearMinValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.AxisProto.prototype.hasMinValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float default_value = 3;
 * @return {number}
 */
proto.google.fonts.AxisProto.prototype.getDefaultValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.setDefaultValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.clearDefaultValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.AxisProto.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float max_value = 4;
 * @return {number}
 */
proto.google.fonts.AxisProto.prototype.getMaxValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.setMaxValue = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.AxisProto} returns this
 */
proto.google.fonts.AxisProto.prototype.clearMaxValue = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.AxisProto.prototype.hasMaxValue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fonts.SourceProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fonts.SourceProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fonts.SourceProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.SourceProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoryUrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    commit: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fonts.SourceProto}
 */
proto.google.fonts.SourceProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fonts.SourceProto;
  return proto.google.fonts.SourceProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fonts.SourceProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fonts.SourceProto}
 */
proto.google.fonts.SourceProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fonts.SourceProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fonts.SourceProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fonts.SourceProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fonts.SourceProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string repository_url = 1;
 * @return {string}
 */
proto.google.fonts.SourceProto.prototype.getRepositoryUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.SourceProto} returns this
 */
proto.google.fonts.SourceProto.prototype.setRepositoryUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.SourceProto} returns this
 */
proto.google.fonts.SourceProto.prototype.clearRepositoryUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.SourceProto.prototype.hasRepositoryUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string commit = 2;
 * @return {string}
 */
proto.google.fonts.SourceProto.prototype.getCommit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.fonts.SourceProto} returns this
 */
proto.google.fonts.SourceProto.prototype.setCommit = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.fonts.SourceProto} returns this
 */
proto.google.fonts.SourceProto.prototype.clearCommit = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fonts.SourceProto.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.google.fonts);
